[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = 0.25

[sub_resource type="VisualShaderNodeColorUniform" id=5]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeTransformConstant" id=7]

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0;
	n_out5p0 = vec3(UV,0.0);

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out5p0.xy );
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 147.333 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 780, 220 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 160, 400 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 400, 200 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( 220, 200 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 360, 300 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( 340, 380 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 500, 420 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 5, 0, 4, 0, 4, 1, 0, 1 )

[resource]
shader = SubResource( 6 )
